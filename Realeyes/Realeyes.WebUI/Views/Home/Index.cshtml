@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

}
    
@section Scripts{
    <script type="text/javascript">
        var exchangeRatio = 1;
        var moneyAmount = 0;
        var graph = null;
        var showLoading = true;
        
        function getDateStr(today)
        {
            var dd = today.getDate();
            var mm = today.getMonth()+1; //January is 0!
            var yyyy = today.getFullYear();

            if(dd<10) {
                dd = '0' + dd;
            } 

            if(mm<10) {
                mm = '0' + mm;
            }

            return mm + '/' + dd + '/' + yyyy;
        }

        function parseDate(input) {
            var parts = input.split('/');
            // new Date(year, month [, day [, hours[, minutes[, seconds[, ms]]]]])
            return new Date(parts[2], parts[0] - 1, parts[1]); // Note: months are 0-based
        }

        function updateGraph() {
            var date1 = $("#jQueryDatePicker1").val();
            var date2 = $("#jQueryDatePicker2").val();
            var cur1 = $("#Combobox1 option:selected").text();
            var cur2 = $("#Combobox2 option:selected").text();

            if (date1 == "" || date2 == "") {
                var today = new Date();
                var weekAgo = new Date();
                weekAgo.setDate(today.getDate() - 7);

                date1 = getDateStr(weekAgo);
                date2 = getDateStr(today);

                $("#jQueryDatePicker1").val(date1);
                $("#jQueryDatePicker2").val(date2);
            }

            var originalDate1 = parseDate(date1);
            var originalDate2 = parseDate(date2);

            if (originalDate1 >= originalDate2) {
                originalDate1.setDate(originalDate2.getDate() - 2);
                date1 = getDateStr(originalDate1);
                $("#jQueryDatePicker1").val(date1);
            }
           
            $.ajax({
                url: "/home/GetExchangeHistory?cur1=" + cur1
                    + "&cur2=" + cur2 + "&date1=" + date1 + "&date2=" + date2,
                type: "POST",
                contentType: "application/text; charset=utf-8",
                complete: function (serverResponse) {
                    var maxValues = 30,
                        resp = serverResponse.responseText,
                        parsedJson = JSON.parse(resp),
                        data = [],
                        oneDayMsec = 86400000,
                        numberOfDays = (originalDate2.getTime() - originalDate1.getTime()) / oneDayMsec,
                        dateStep = (numberOfDays * oneDayMsec) / maxValues,
                        orgnTime1 = originalDate1.getTime(),
                        orgnTime2 = originalDate2.getTime();

                    var minY = null;
                    var maxY = null;

                    for (var i = orgnTime1 ; i <= orgnTime2 ; i += dateStep) {
                        var index = Math.floor(((i - orgnTime1) * (parsedJson.length - 1)) / (orgnTime2 - orgnTime1));
                        var y = parsedJson[index];

                        if (maxY == null || y > maxY) maxY = y;
                        if (minY == null || y < maxY) minY = y;

                        data.push({ x: Math.round(i / 1000), y: y });
                    }

                    graph.max = maxY + 0.3 * maxY;
                    graph.series[0].data = data;
                    graph.update();
                }
            });
        }

        function setupGraph() {
            var palette = new Rickshaw.Color.Palette();

            graph = new Rickshaw.Graph({
                element: document.querySelector("#chart"),
                width: 600,
                height: 200,
                renderer: 'line',
                series: [
                    {
                        name: 'Rate',
                        data: [],
                        color: palette.color(),
                    }
                ]
            });

            var hoverDetail = new Rickshaw.Graph.HoverDetail({
                graph: graph
            });
            var xAxis = new Rickshaw.Graph.Axis.Time({
                graph: graph
            });
            var yAxis = new Rickshaw.Graph.Axis.Y({
                graph: graph,
                orientation: 'left',
                tickFormat: Rickshaw.Fixtures.Number.formatKMBT,
                element: document.getElementById('y_axis'),
            });

            graph.render();
        }

        function exchangeCurrency() {
            $('#Editbox1').val(Math.round(exchangeRatio * moneyAmount * 100) / 100);
        }

        function updateCurrenciesNames() {
            $.ajax({
                url: "/home/GetAllPossibleCurrencies",
                type: "POST",
                contentType: "application/text; charset=utf-8",
                complete: function (serverResponse) {
                    var values = JSON.parse(serverResponse.responseText);
                    
                    $.each(values, function (key, value) {
                        $('#Combobox1')
                            .append($(value == "USD"
                                        ? "<option selected></option>"
                                        : "<option></option>")
                                    .attr("value", value)
                                    .text(value));
                        $('#Combobox2')
                            .append($(value == "EUR" 
                                        ? "<option selected></option>"
                                        : "<option></option>")
                                    .attr("value", value)
                                    .text(value));
                    });

                    updateExchangeRatio();
                    updateGraph();

                    showLoading = false;
                }
            });
        }

        function updateExchangeRatio() {
            var cur1 = $("#Combobox1 option:selected").text();
            var cur2 = $("#Combobox2 option:selected").text();
            $.ajax({
                url: "/home/GetLastExchangeRate?cur1=" + cur1
                    + "&cur2=" + cur2,
                type: "GET",
                contentType: "application/text; charset=utf-8",
                complete: function (serverResponse) {
                    exchangeRatio = serverResponse.responseText;
                    $("#Rate").html("<strong>Rate: " + Math.round(exchangeRatio * 100) / 100 + "</strong>");
                    exchangeCurrency();
                }
            });
        }

        function setupSpinnerChangeBehavior() {
            $('.ui-spinner-button').click(function () { $(this).siblings('input').change(); });

            $('#jQuerySpinner1').spinner().change(function () {
                moneyAmount = $(this).spinner('value');
                exchangeCurrency();
            });
        }

        function prepareUi() {
            var jQueryDatePicker1Opts =
            {
                dateFormat: 'mm/dd/yy',
                changeMonth: false,
                changeYear: false,
                showButtonPanel: false,
                showAnim: 'show'
            };
            $("#jQueryDatePicker1").datepicker(jQueryDatePicker1Opts);
            var jQueryDatePicker2Opts =
            {
                dateFormat: 'mm/dd/yy',
                changeMonth: false,
                changeYear: false,
                showButtonPanel: false,
                showAnim: 'show'
            };
            $("#jQueryDatePicker2").datepicker(jQueryDatePicker2Opts);
            var jQuerySpinner1Opts =
            {
                min: 0,
                max: 1000000,
                step: 1
            };
            $("#jQuerySpinner1").spinner(jQuerySpinner1Opts);

            var body = $("body");
            $(document).on({
                ajaxStart: function () {
                    if (showLoading) body.addClass("loading");
                },
                ajaxStop: function () {
                    body.removeClass("loading");
                }
            });
        }

        $(document).ready(function () {
            prepareUi();
            setupSpinnerChangeBehavior();
            setupGraph();
            updateCurrenciesNames();
        });
    </script>
}

<div id="container">
    <div id="div_global">
        <div id="div_chartMain">
            <div id="div_chartSettings">
                <div id="div_datePickers">
                    <input type="text" id="jQueryDatePicker1" name="jQueryDatePicker1" value="" onchange="updateGraph();">
                    <div id="wb_Text2">
                        <span style="color:#000000;font-family:Calibri;font-size:13px;">Start date<br></span></div>
                    <div id="wb_Text3">
                        <span style="color:#000000;font-family:Calibri;font-size:13px;">End date<br></span></div>
                    <input type="text" id="jQueryDatePicker2" name="jQueryDatePicker1" value="" onchange="updateGraph();">
                </div>
            </div>
            <div id="div_chartData">
                <div id="chart_container">
                    <div id="y_axis"></div>
                    <div id="chart"></div>
                </div>
            </div>
            <div id="wb_div_chartHeading">
                <span style="color:#000000;font-family:Calibri;font-size:21px;"><strong>Exchange History</strong></span></div>
        </div>
        <div id="div_exchangeMain">
            <div id="div_exchangeHeading">
                <div id="wb_Text5">
                    <span style="color:#000000;font-family:Calibri;font-size:17px;"><strong>Currency Exchange</strong></span></div>
            </div>
            <div id="div_exchange">
                <select name="ComboboxCur1" size="1" id="Combobox1" onchange="updateExchangeRatio();updateGraph();">
                </select>
                <div id="wb_Text4">
                    <span style="color:#000000;font-family:Calibri;font-size:16px;"><strong>To</strong></span></div>
                <select name="ComboboxCur2" size="1" id="Combobox2" onchange="updateExchangeRatio();updateGraph();">
                </select>
                <input type="text" id="Editbox1" name="Editbox1" value="" readonly>
                <div id="wb_Text8">
                    <span id="Rate" style="color:#000000;font-family:Calibri;font-size:16px;"><strong>Rate:</strong></span></div>
                <div id="wb_jQuerySpinner1">
                    <input type="text" id="jQuerySpinner1" name="jQuerySpinner1" value="0"></div>
                <div id="wb_Text6">
                    <span style="color:#000000;font-family:Calibri;font-size:16px;"><strong>=</strong></span></div>
            </div>
        </div>
    </div>
    <div id="wb_Shape1">
        <a href="https://github.com/dyatchenko/ServiceBrokerListener"><img src="~/images/img0001.png" id="Shape1" alt=""></a></div>
    <div id="wb_Text1">
        <span style="color:#FFFFFF;font-family:Calibri;font-size:27px;"><strong>European Central Bank currency exchange</strong></span></div>
    <div id="wb_Shape2">
        <img src="~/images/img0003.png" id="Shape2" alt=""></div>
    <div id="wb_Text7">
        <span style="color:#FFFFFF;font-family:Tahoma;font-size:11px;">Powered by Dyatchenko&nbsp; E-Mail: dyatchenko.dv@gmail.com</span></div>
    <div class="modal"><!-- Place at bottom of page --></div>
</div>